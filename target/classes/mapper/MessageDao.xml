<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warehouseManag.dao.MessageDao">

    <resultMap type="com.warehouseManag.entity.Message" id="MessageMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="identity" column="identity" jdbcType="VARCHAR"/>
        <result property="outTime" column="out_time" jdbcType="TIMESTAMP"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="readStatus" column="read_status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MessageMap">
        select
          id, identity, out_time, content, read_status, create_time
        from message
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MessageMap">
        select
          id, identity, out_time, content, read_status, create_time
        from message
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="identity != null and identity != ''">
                and identity = #{identity}
            </if>
            <if test="outTime != null">
                and out_time = #{outTime}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="readStatus != null">
                and read_status = #{readStatus}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from message
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="identity != null and identity != ''">
                and identity = #{identity}
            </if>
            <if test="outTime != null">
                and out_time = #{outTime}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="readStatus != null">
                and read_status = #{readStatus}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>
    <select id="countByOutTime" resultType="java.lang.Long">
        select count(1)
        from message
        where out_time>=#{afterOutTime} and out_time &lt;= #{beforeOutTime}
    </select>
    <select id="queryOutTimeByLimit" resultType="com.warehouseManag.entity.Message">
        select
        id, identity, out_time, content, read_status, create_time
        from message
        where out_time>=#{afterOutTime} and out_time &lt;= #{beforeOutTime}
        order by create_time desc
        limit #{page}, #{limit}
    </select>
    <select id="selectOvertime" resultType="com.warehouseManag.entity.Message">
        SELECT id, identity, out_time, content, read_status, create_time
        FROM message
        WHERE read_status = 0 AND create_time &lt;=#{overThreeTime}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into message(identity, out_time, content, read_status, create_time)
        values (#{identity}, #{outTime}, #{content}, #{readStatus}, #{createTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into message(identity, out_time, content, read_status, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.identity}, #{entity.outTime}, #{entity.content}, #{entity.readStatus}, #{entity.createTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into message(identity, out_time, content, read_status, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.identity}, #{entity.outTime}, #{entity.content}, #{entity.readStatus}, #{entity.createTime})
        </foreach>
        on duplicate key update
        identity = values(identity),
        out_time = values(out_time),
        content = values(content),
        read_status = values(read_status),
        create_time = values(create_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update message
        <set>
            <if test="identity != null and identity != ''">
                identity = #{identity},
            </if>
            <if test="outTime != null">
                out_time = #{outTime},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="readStatus != null">
                read_status = #{readStatus},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateToStatus">
        update message
        set read_status=1
        where id=#{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from message where id = #{id}
    </delete>

</mapper>

