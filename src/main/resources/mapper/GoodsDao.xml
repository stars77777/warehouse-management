<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warehouseManag.dao.GoodsDao">

    <resultMap type="com.warehouseManag.entity.Goods" id="GoodsMap">
        <result property="goodsId" column="goods_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="specification" column="specification" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="createTime" column="create_time" jdbcType="DATE"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="GoodsMap">
        select
          goods_id, name, specification, price
        from goods
        where goods_id = #{goodsId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="GoodsMap">
        select
          goods_id, name, specification, price,create_time
        from goods
        <where>
            <if test="name != null and name != ''">
                and name like '%${name}%'
            </if>
        </where>
        order by create_time desc
        limit #{page}, #{limit}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from goods
        <where>
            <if test="name != null and name != ''">
                and name like '%${name}%'
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="goodsId" useGeneratedKeys="true">
        insert into goods(name, specification, price,create_time)
        values (#{name}, #{specification}, #{price},#{createTime})
    </insert>


    <insert id="insertOrUpdateBatch" keyProperty="goodsId" useGeneratedKeys="true">
        insert into goods(name, specification, price)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.specification}, #{entity.price})
        </foreach>
        on duplicate key update
        name = values(name),
        specification = values(specification),
        price = values(price)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update goods
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="specification != null and specification != ''">
                specification = #{specification},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
        </set>
        where goods_id = #{goodsId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from goods where goods_id = #{goodsId}
    </delete>

</mapper>

